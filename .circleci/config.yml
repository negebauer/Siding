# https://github.com/CircleCI-Public/circleci-demo-react-native/blob/master/.circleci/config.yml

version: 2
jobs:
  node:
    working_directory: ~/siding
    docker:
      - image: circleci/node:9.11
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - run: yarn lint
      - persist_to_workspace:
          root: ~/siding
          paths:
            - node_modules

  android:
    working_directory: ~/siding/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/siding
      - run:
          name: Download android keystore
          command: curl -L -o app/siding.keystore $ANDROID_KEYSTORE_URI
      - attach_workspace:
          at: ~/siding
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane build_ci
      - store_artifacts:
          path: app/build/outputs/apk/app-release.apk
          destination: ./app-release.apk
      - persist_to_workspace:
          root: ~/siding/android
          paths:
            - app/build/outputs/apk/app-release.apk

  ios:
    working_directory: ~/siding/ios
    macos:
      xcode: "9.0"
    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
         path: ~/siding
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - restore_cache:
          key: yarn-v1-{{ checksum "../yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "../package.json" }}-{{ arch }}
      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn
      - save_cache:
          key: yarn-v1-{{ checksum "../yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "../package.json" }}-{{ arch }}
          paths:
            - ../node_modules
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane build_ci
      - store_artifacts:
          path: siding.ipa
          destination: ./siding.ipa
      - store_artifacts:
          path: siding.app.dSYM.zip
          destination: ./siding.app.dSYM.zip
      - persist_to_workspace:
          root: ~/siding/ios
          paths:
            - siding.ipa

  beta-android:
    working_directory: ~/siding/android
    docker:
      - image: circleci/ruby:2.5-node
    steps:
      - checkout:
         path: ~/siding
      - attach_workspace:
          at: ~/siding/android
      - attach_workspace:
          at: ~/siding
      - run:
          name: Download android fastlane json
          command: curl -L -o fastlane/fastlane-siding.json $ANDROID_FASTLANE_JSON_URI
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane beta_ci

  beta-ios:
    working_directory: ~/siding/ios
    macos:
      xcode: "9.0"
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
         path: ~/siding
      - attach_workspace:
          at: ~/siding/ios
      - attach_workspace:
          at: ~/siding
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane beta_ci

  deploy-android:
    working_directory: ~/siding/android
    docker:
      - image: circleci/ruby:2.5-node
    steps:
      - checkout:
         path: ~/siding
      - attach_workspace:
          at: ~/siding/android
      - run:
          name: Download android fastlane json
          command: curl -L -o fastlane/fastlane-siding.json $ANDROID_FASTLANE_JSON_URI
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane deploy_ci

  deploy-ios:
    working_directory: ~/siding/ios
    macos:
      xcode: "9.0"
    steps:
      - checkout:
         path: ~/siding
      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version
      - attach_workspace:
          at: ~/siding/ios
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - run: bundle exec fastlane deploy_ci

workflows:
  version: 2
  workflow:
    jobs:
      - node:
          filters:
            tags:
              only: /.*/
      - android:
          requires:
            - node
          filters:
            branches:
              only:
                - /f\/.*/
                - master
            tags:
              only: /.*/
      - ios:
          requires:
            - node
          filters:
            branches:
              only:
                - /f\/.*/
                - master
            tags:
              only: /.*/
      - beta-android:
          requires:
            - android
          filters:
            branches:
              only: master
      - beta-ios:
          requires:
            - ios
          filters:
            branches:
              only:
                - master
                - /f\/.*/
      - deploy-android:
          requires:
            - android
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
      - deploy-ios:
          requires:
            - ios
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
